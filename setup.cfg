[flake8]
max-line-length = 120
max-complexity = 18
ignore = E203, E266, W503
docstring-convention = google
per-file-ignores = __init__.py:F401
min-python-version = 3.8
exclude = .git,
    __pycache__,
    setup.py,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,
    tests

[mypy]
ignore_missing_imports = True

[coverage:run]
# uncomment the following to omit files during running
#omit =
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main

[tox:tox]
isolated_build = true
envlist = py38, py39, py310, format, lint, build
skip_missing_interpreters = true

[gh-actions]
python =
    3.10: py310, format, lint, mkdocs, build
    3.9: py39
    3.8: py38

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
whitelist_externals = poetry
commands =
    poetry install
    poetry run pytest --cov=ember_mug --cov-branch --cov-report=xml --cov-report=term-missing tests
passenv = *

[testenv:format]
commands =
    poetry run isort ember_mug
    poetry run black ember_mug tests

[testenv:lint]
commands =
    poetry run flake8 ember_mug tests
    poetry run mypy ember_mug tests

[testenv:mkdocs]
commands =
    poetry run mkdocs build

[testenv:build]
commands =
    poetry install --only main
    poetry build
    poetry run twine check dist/*
